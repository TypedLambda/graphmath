{"objects":[{"type":null,"source":"lib/graphmath.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.Graphmath","id":"Graphmath"},{"type":null,"source":"lib/Mat33.ex:1","object_type":"ModuleObject","moduledoc":"This is the 3D mathematics library for graphmath.\n\nThis submodule handles 3x3 matrices using tuples of floats.\n","module":"Elixir.Graphmath.Mat33","id":"Graphmath.Mat33"},{"type":null,"source":"lib/Mat44.ex:1","object_type":"ModuleObject","moduledoc":"This is the 3D mathematics library for graphmath.\n\nThis submodule handles 4x4 matrices using tuples of floats.\n","module":"Elixir.Graphmath.Mat44","id":"Graphmath.Mat44"},{"type":null,"source":"lib/Vec2.ex:1","object_type":"ModuleObject","moduledoc":"This is the 2D mathematics library for graphmath.\n\nThis submodule handles vectors stored as a tuple.\n","module":"Elixir.Graphmath.Vec2","id":"Graphmath.Vec2"},{"type":null,"source":"lib/Vec3.ex:1","object_type":"ModuleObject","moduledoc":"This is the 3D mathematics library for graphmath.\n\nThis submodule handles 3D vectors using tuples of floats.\n","module":"Elixir.Graphmath.Vec3","id":"Graphmath.Vec3"},{"type":"def","source":"lib/Mat33.ex:39","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"add","module_id":"Graphmath.Mat33","id":"add/2","doc":"`add(a,b)` adds one 3x3 matrix to another.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:304","signature":[["a",[],null],["v",[],null]],"object_type":"FunctionObject","name":"apply","module_id":"Graphmath.Mat33","id":"apply/2","doc":"`apply( a, v )` transforms a vector `v` by a 3x3 matrix `a`.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:340","signature":[["v",[],null],["a",[],null]],"object_type":"FunctionObject","name":"apply_left","module_id":"Graphmath.Mat33","id":"apply_left/2","doc":"`apply_left( v, a )` transforms a vector `v` by a 3x3 matrix `a`.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:358","signature":[["v",[],null],["a",[],null]],"object_type":"FunctionObject","name":"apply_left_transpose","module_id":"Graphmath.Mat33","id":"apply_left_transpose/2","doc":"`apply_left_transpose( v, a )` transforms a vector `v` by a 3x3 matrix `a` transposed.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:322","signature":[["a",[],null],["v",[],null]],"object_type":"FunctionObject","name":"apply_transpose","module_id":"Graphmath.Mat33","id":"apply_transpose/2","doc":"`apply_transpose( a, v )` transforms a vector `v` by a 3x3 matrix `a` transposed.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:296","signature":[["a",[],null],["i",[],null],["j",[],null]],"object_type":"FunctionObject","name":"at","module_id":"Graphmath.Mat33","id":"at/3","doc":"`at( a, i, j)` selects the element of a 3x3 matrix at row i and column j.\n","arity":3},{"type":"def","source":"lib/Mat33.ex:213","signature":[["a",[],null]],"object_type":"FunctionObject","name":"column0","module_id":"Graphmath.Mat33","id":"column0/1","doc":"`column0( a )` selects the first column from a matrix 3x3 as a vec3.\n","arity":1},{"type":"def","source":"lib/Mat33.ex:225","signature":[["a",[],null]],"object_type":"FunctionObject","name":"column1","module_id":"Graphmath.Mat33","id":"column1/1","doc":"`column1( a )` selects the second column from a matrix 3x3 as a vec3.\n","arity":1},{"type":"def","source":"lib/Mat33.ex:237","signature":[["a",[],null]],"object_type":"FunctionObject","name":"column2","module_id":"Graphmath.Mat33","id":"column2/1","doc":"`column2( a )` selects the third column from a matrix 3x3 as a vec3.\n","arity":1},{"type":"def","source":"lib/Mat33.ex:284","signature":[["a",[],null]],"object_type":"FunctionObject","name":"diag","module_id":"Graphmath.Mat33","id":"diag/1","doc":"`diag( a )` selects the diagonal from a matrix 3x3 as a vec3.\n","arity":1},{"type":"def","source":"lib/Mat33.ex:19","signature":[],"object_type":"FunctionObject","name":"identity","module_id":"Graphmath.Mat33","id":"identity/0","doc":"`identity()` creates a 3x3 identity matrix.\n","arity":0},{"type":"def","source":"lib/Mat33.ex:119","signature":[["theta",[],null]],"object_type":"FunctionObject","name":"make_rotate","module_id":"Graphmath.Mat33","id":"make_rotate/1","doc":"`make_rotate( theta )` creates a mat33 that rotates a vec2 by `theta` radians about the Z axis.\n","arity":1},{"type":"def","source":"lib/Mat33.ex:89","signature":[["k",[],null]],"object_type":"FunctionObject","name":"make_scale","module_id":"Graphmath.Mat33","id":"make_scale/1","doc":"`make_scale( k )` creates a mat33 that uniformly scales by a value k.\n","arity":1},{"type":"def","source":"lib/Mat33.ex:99","signature":[["sx",[],null],["sy",[],null],["sz",[],null]],"object_type":"FunctionObject","name":"make_scale","module_id":"Graphmath.Mat33","id":"make_scale/3","doc":"`make_scale( sx, sy, sz )` creates a mat33 that scales by sx, sy, and sz.\n","arity":3},{"type":"def","source":"lib/Mat33.ex:109","signature":[["tx",[],null],["ty",[],null]],"object_type":"FunctionObject","name":"make_translate","module_id":"Graphmath.Mat33","id":"make_translate/2","doc":"`make_translate( tx, ty )` creates a mat33 that translates a vec2 by (tx, ty).\n","arity":2},{"type":"def","source":"lib/Mat33.ex:157","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"multiply","module_id":"Graphmath.Mat33","id":"multiply/2","doc":"`multiply( a, b )` multiply two matrices a and b together.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:185","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"multiply_transpose","module_id":"Graphmath.Mat33","id":"multiply_transpose/2","doc":"`multiply_transpose( a, b )` multiply two matrices a and b transpose together.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:132","signature":[["a",[],null],["sigfigs",[],null]],"object_type":"FunctionObject","name":"round","module_id":"Graphmath.Mat33","id":"round/2","doc":"`round( a, sigfigs )` rounds every element of a supplied mat33 `a` to number of digits `sigfigs`.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:249","signature":[["a",[],null]],"object_type":"FunctionObject","name":"row0","module_id":"Graphmath.Mat33","id":"row0/1","doc":"`row0( a )` selects the first row from a matrix 3x3 as a vec3.\n","arity":1},{"type":"def","source":"lib/Mat33.ex:260","signature":[["a",[],null]],"object_type":"FunctionObject","name":"row1","module_id":"Graphmath.Mat33","id":"row1/1","doc":"`row1( a )` selects the second row from a matrix 3x3 as a vec3.\n","arity":1},{"type":"def","source":"lib/Mat33.ex:272","signature":[["a",[],null]],"object_type":"FunctionObject","name":"row2","module_id":"Graphmath.Mat33","id":"row2/1","doc":"`row2( a )` selects the third row from a matrix 3x3 as a vec3.\n","arity":1},{"type":"def","source":"lib/Mat33.ex:75","signature":[["a",[],null],["k",[],null]],"object_type":"FunctionObject","name":"scale","module_id":"Graphmath.Mat33","id":"scale/2","doc":"`scale( a, k )` scales every element in a matrix a by coefficient k.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:57","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"subtract","module_id":"Graphmath.Mat33","id":"subtract/2","doc":"`subtract(a,b)` subtracts one 3x3 matrix from another..\n","arity":2},{"type":"def","source":"lib/Mat33.ex:380","signature":[["a",[],null],["v",[],null]],"object_type":"FunctionObject","name":"transform_point","module_id":"Graphmath.Mat33","id":"transform_point/2","doc":"`transform_point( a, v )` transforms a vec2 point `v` by a matrix `a`.\n\nThe point `a` is internally treated as having a third coordinate equal to 1.0.\n\nNote that transforming a point will work for all transforms.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:401","signature":[["a",[],null],["v",[],null]],"object_type":"FunctionObject","name":"transform_vector","module_id":"Graphmath.Mat33","id":"transform_vector/2","doc":"`transform_vector( a, v )` transforms a vec2 vector `v` by a matrix `a`.\n\nThe point `a` is internally treated as having a third coordinate equal to 0.0.\n\nNote that transforming a vector will work for only rotations, scales, and shears.\n","arity":2},{"type":"def","source":"lib/Mat33.ex:29","signature":[],"object_type":"FunctionObject","name":"zero","module_id":"Graphmath.Mat33","id":"zero/0","doc":"`zero()` creates a 3x3 zero matrix.\n","arity":0},{"type":"def","source":"lib/Mat44.ex:42","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"add","module_id":"Graphmath.Mat44","id":"add/2","doc":"`add(a,b)` adds one 4x4 matrix to another.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:410","signature":[["a",[],null],["v",[],null]],"object_type":"FunctionObject","name":"apply","module_id":"Graphmath.Mat44","id":"apply/2","doc":"`apply( a, v )` transforms a vector `v` by a 4x4 matrix `a`.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:450","signature":[["v",[],null],["a",[],null]],"object_type":"FunctionObject","name":"apply_left","module_id":"Graphmath.Mat44","id":"apply_left/2","doc":"`apply_left( v, a )` transforms a vector `v` by a 4x4 matrix `a`.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:470","signature":[["v",[],null],["a",[],null]],"object_type":"FunctionObject","name":"apply_left_transpose","module_id":"Graphmath.Mat44","id":"apply_left_transpose/2","doc":"`apply_left_transpose( v, a )` transforms a vector `v` by a 4x4 matrix `a` transposed.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:430","signature":[["a",[],null],["v",[],null]],"object_type":"FunctionObject","name":"apply_transpose","module_id":"Graphmath.Mat44","id":"apply_transpose/2","doc":"`apply_transpose( a, v )` transforms a vector `v` by a 4x4 matrix `a` transposed.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:402","signature":[["a",[],null],["i",[],null],["j",[],null]],"object_type":"FunctionObject","name":"at","module_id":"Graphmath.Mat44","id":"at/3","doc":"`at( a, i, j)` selects the element of a 4x4 matrix at row i and column j.\n","arity":3},{"type":"def","source":"lib/Mat44.ex:286","signature":[["a",[],null]],"object_type":"FunctionObject","name":"column0","module_id":"Graphmath.Mat44","id":"column0/1","doc":"`column0( a )` selects the first column from a matrix 4x4 as a vec4.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:299","signature":[["a",[],null]],"object_type":"FunctionObject","name":"column1","module_id":"Graphmath.Mat44","id":"column1/1","doc":"`column1( a )` selects the second column from a matrix 4x4 as a vec4.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:312","signature":[["a",[],null]],"object_type":"FunctionObject","name":"column2","module_id":"Graphmath.Mat44","id":"column2/1","doc":"`column2( a )` selects the third column from a matrix 4x4 as a vec4.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:325","signature":[["a",[],null]],"object_type":"FunctionObject","name":"column3","module_id":"Graphmath.Mat44","id":"column3/1","doc":"`column3( a )` selects the fourth column from a matrix 4x4 as a vec4.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:389","signature":[["a",[],null]],"object_type":"FunctionObject","name":"diag","module_id":"Graphmath.Mat44","id":"diag/1","doc":"`diag( a )` selects the diagonal from a matrix 4x4 as a vec4.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:20","signature":[],"object_type":"FunctionObject","name":"identity","module_id":"Graphmath.Mat44","id":"identity/0","doc":"`identity()` creates a 4x4 identity matrix.\n","arity":0},{"type":"def","source":"lib/Mat44.ex:134","signature":[["theta",[],null]],"object_type":"FunctionObject","name":"make_rotate_x","module_id":"Graphmath.Mat44","id":"make_rotate_x/1","doc":"`make_rotate_x( theta )` creates a mat44 that rotates a vec3 by `theta` radians about the X axis.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:148","signature":[["theta",[],null]],"object_type":"FunctionObject","name":"make_rotate_y","module_id":"Graphmath.Mat44","id":"make_rotate_y/1","doc":"`make_rotate_y( theta )` creates a mat44 that rotates a vec3 by `theta` radians about the Y axis.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:162","signature":[["theta",[],null]],"object_type":"FunctionObject","name":"make_rotate_z","module_id":"Graphmath.Mat44","id":"make_rotate_z/1","doc":"`make_rotate_z( theta )` creates a mat44 that rotates a vec3 by `theta` radians about the Z axis.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:100","signature":[["k",[],null]],"object_type":"FunctionObject","name":"make_scale","module_id":"Graphmath.Mat44","id":"make_scale/1","doc":"`make_scale( k )` creates a mat44 that uniformly scales by a value k.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:111","signature":[["sx",[],null],["sy",[],null],["sz",[],null],["sw",[],null]],"object_type":"FunctionObject","name":"make_scale","module_id":"Graphmath.Mat44","id":"make_scale/4","doc":"`make_scale( sx, sy, sz, sw )` creates a mat44 that scales by sx, sy, sz, and sz.\n","arity":4},{"type":"def","source":"lib/Mat44.ex:122","signature":[["tx",[],null],["ty",[],null],["tz",[],null]],"object_type":"FunctionObject","name":"make_translate","module_id":"Graphmath.Mat44","id":"make_translate/3","doc":"`make_translate( tx, ty, tz )` creates a mat44 that translates a point by tx, ty, and tz.\n","arity":3},{"type":"def","source":"lib/Mat44.ex:210","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"multiply","module_id":"Graphmath.Mat44","id":"multiply/2","doc":"`multiply( a, b )` multiply two matrices a and b together.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:248","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"multiply_transpose","module_id":"Graphmath.Mat44","id":"multiply_transpose/2","doc":"`multiply_transpose( a, b )` multiply two matrices a and b transpose together.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:176","signature":[["a",[],null],["sigfigs",[],null]],"object_type":"FunctionObject","name":"round","module_id":"Graphmath.Mat44","id":"round/2","doc":"`round( a, sigfigs )` rounds every element of a supplied mat44 `a` to number of digits `sigfigs`.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:338","signature":[["a",[],null]],"object_type":"FunctionObject","name":"row0","module_id":"Graphmath.Mat44","id":"row0/1","doc":"`row0( a )` selects the first row from a matrix 4x4 as a vec4.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:350","signature":[["a",[],null]],"object_type":"FunctionObject","name":"row1","module_id":"Graphmath.Mat44","id":"row1/1","doc":"`row1( a )` selects the second row from a matrix 4x4 as a vec4.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:363","signature":[["a",[],null]],"object_type":"FunctionObject","name":"row2","module_id":"Graphmath.Mat44","id":"row2/1","doc":"`row2( a )` selects the third row from a matrix 4x4 as a vec4.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:376","signature":[["a",[],null]],"object_type":"FunctionObject","name":"row3","module_id":"Graphmath.Mat44","id":"row3/1","doc":"`row3( a )` selects the fourth row from a matrix 4x4 as a vec4.\n","arity":1},{"type":"def","source":"lib/Mat44.ex:84","signature":[["a",[],null],["k",[],null]],"object_type":"FunctionObject","name":"scale","module_id":"Graphmath.Mat44","id":"scale/2","doc":"`scale( a, k )` scales every element in a matrix a by coefficient k.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:63","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"subtract","module_id":"Graphmath.Mat44","id":"subtract/2","doc":"`subtract(a,b)` subtracts one 4x4 matrix from another..\n","arity":2},{"type":"def","source":"lib/Mat44.ex:494","signature":[["a",[],null],["v",[],null]],"object_type":"FunctionObject","name":"transform_point","module_id":"Graphmath.Mat44","id":"transform_point/2","doc":"`transform_point( a, v )` transforms a vec3 point `v` by a matrix `a`.\n\nThe point `a` is internally treated as having a fourth coordinate equal to 1.0.\n\nNote that transforming a point will work for all transforms.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:517","signature":[["a",[],null],["v",[],null]],"object_type":"FunctionObject","name":"transform_vector","module_id":"Graphmath.Mat44","id":"transform_vector/2","doc":"`transform_vector( a, v )` transforms a vec3 vector `v` by a matrix `a`.\n\nThe point `a` is internally treated as having a fourth coordinate equal to 0.0.\n\nNote that transforming a vector will work for only rotations, scales, and shears.\n","arity":2},{"type":"def","source":"lib/Mat44.ex:31","signature":[],"object_type":"FunctionObject","name":"zero","module_id":"Graphmath.Mat44","id":"zero/0","doc":"`zero()` creates a 4x4 zero matrix.\n","arity":0},{"type":"def","source":"lib/Vec2.ex:48","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"add","module_id":"Graphmath.Vec2","id":"add/2","doc":"`add( a, b)` adds a vec2 (a) to a vec2 (b).\n\nIt returns a tuple of the form { ax + bx, ay + by }.\n","arity":2},{"type":"def","source":"lib/Vec2.ex:17","signature":[],"object_type":"FunctionObject","name":"create","module_id":"Graphmath.Vec2","id":"create/0","doc":"`create()` creates a zero vec2.\n\nIt will return a tuple of the form {0.0,0.0}.\n","arity":0},{"type":"def","source":"lib/Vec2.ex:37","signature":[["vec",[],null]],"object_type":"FunctionObject","name":"create","module_id":"Graphmath.Vec2","id":"create/1","doc":"`create(vec)` creates a vec2 of value (x,y) out of a list of 2 or more numbers.\n\nIt will return a tupleof the form {x,y}.\n","arity":1},{"type":"def","source":"lib/Vec2.ex:27","signature":[["x",[],null],["y",[],null]],"object_type":"FunctionObject","name":"create","module_id":"Graphmath.Vec2","id":"create/2","doc":"`create(x,y)` creates a vec2 of value (x,y).\n\nIt will return a tuple of the form {x,y}.\n","arity":2},{"type":"def","source":"lib/Vec2.ex:95","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"dot","module_id":"Graphmath.Vec2","id":"dot/2","doc":"`dot( a, b)` finds the dot (inner) product of a vec2 (a)  with another vec2 (b).\n\nIt returns a float of the value (ax*bx + ay*by).\n","arity":2},{"type":"def","source":"lib/Vec2.ex:123","signature":[["a",[],null]],"object_type":"FunctionObject","name":"length","module_id":"Graphmath.Vec2","id":"length/1","doc":"`length(a)` finds the length (L2 norm) of a vec2 (a).\n\nThe length is the square root of the sum of the squares of the components.\n\nIt returns a float of the value ( sqrt(ax*ax + ay*ay).\n","arity":1},{"type":"def","source":"lib/Vec2.ex:149","signature":[["a",[],null]],"object_type":"FunctionObject","name":"length_manhattan","module_id":"Graphmath.Vec2","id":"length_manhattan/1","doc":"`length_manhattan(a)` finds the Manhattan (L1 norm) length of a vec2 (a).\n\nThe Manhattan length is the sum of the components.\n\nIt returns a float of the value (ax + ay).\n","arity":1},{"type":"def","source":"lib/Vec2.ex:136","signature":[["a",[],null]],"object_type":"FunctionObject","name":"length_squared","module_id":"Graphmath.Vec2","id":"length_squared/1","doc":"`length_squared(a)` finds the square of the length of a vec2 (a).\n\nIn many cases, this is sufficient for comparisions and avaoids a sqrt.\n\nIt returns a float of the value (ax*ax + ay*ay).\n","arity":1},{"type":"def","source":"lib/Vec2.ex:174","signature":[["a",[],null],["b",[],null],["t",[],null]],"object_type":"FunctionObject","name":"lerp","module_id":"Graphmath.Vec2","id":"lerp/3","doc":"`lerp(a,b,t)` is used to linearly interpolate between two given vectors a and b along an interpolant t.\n\nThe interpolant `t`  is on the domain [0,1]. Behavior outside of that is undefined.\n","arity":3},{"type":"def","source":"lib/Vec2.ex:72","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"multiply","module_id":"Graphmath.Vec2","id":"multiply/2","doc":"`multiply( a, b)` mulitplies element-wise a vec2 (a) by a vec2 (b).\n\nIt returns a tuple of the form { ax*bx, ay*by }.\n","arity":2},{"type":"def","source":"lib/Vec2.ex:195","signature":[["a",[],null],["b",[],null],["distance",[],null]],"object_type":"FunctionObject","name":"near","module_id":"Graphmath.Vec2","id":"near/3","doc":"`near(a,b, distance)` checks whether two vectors are within a length of each other.\n","arity":3},{"type":"def","source":"lib/Vec2.ex:162","signature":[["a",[],null]],"object_type":"FunctionObject","name":"normalize","module_id":"Graphmath.Vec2","id":"normalize/1","doc":"`normalize(a)` finds the unit vector with the same direction as a vec2 (a).\n\nThis is done by dividing each component by the vector's magnitude.\n\nIt returns a tuple of the form { normx, normy }.\n","arity":1},{"type":"def","source":"lib/Vec2.ex:218","signature":[["a",[],null]],"object_type":"FunctionObject","name":"perp","module_id":"Graphmath.Vec2","id":"perp/1","doc":"`perp(a)` creates a vector perpendicular to another vector `a`.\n","arity":1},{"type":"def","source":"lib/Vec2.ex:109","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"perp_prod","module_id":"Graphmath.Vec2","id":"perp_prod/2","doc":"`perp_prod( a, b)` finds the perpindicular product of a vec2 (a) with another vec2 (b).\n\nThe perpindicular product is the magnitude of the cross-product between the two vectors.\n\nIt returns a float of the value (ax*by - bx*ay).\n","arity":2},{"type":"def","source":"lib/Vec2.ex:207","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"project","module_id":"Graphmath.Vec2","id":"project/2","doc":"`project(a,b)` projects one vector onto another, and returns the resulting image.\n","arity":2},{"type":"def","source":"lib/Vec2.ex:184","signature":[["a",[],null],["theta",[],null]],"object_type":"FunctionObject","name":"rotate","module_id":"Graphmath.Vec2","id":"rotate/2","doc":"`rotate(a,theta)` rotates a vec2 (a) CCW about the +Z axis `theta` radians.\n","arity":2},{"type":"def","source":"lib/Vec2.ex:84","signature":[["a",[],null],["scale",[],null]],"object_type":"FunctionObject","name":"scale","module_id":"Graphmath.Vec2","id":"scale/2","doc":"`scale( a, scale)` uniformly scales a vec2 (a) by an amount (x).\n\nIt returns a tuple of the form { ax*scale, ay*scale }.\n","arity":2},{"type":"def","source":"lib/Vec2.ex:60","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"subtract","module_id":"Graphmath.Vec2","id":"subtract/2","doc":"`subtract(a, b)` subtracts a vec2 (b) from a vec2 (a).\n\nIt returns a tuple of the form { ax - bx, ay - by }.\n","arity":2},{"type":"def","source":"lib/Vec3.ex:48","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"add","module_id":"Graphmath.Vec3","id":"add/2","doc":"`add( a, b)` adds a vec3 (a) to a vec3 (b).\n\nIt returns a tuple of the form { ax + bx, ay + by, az + bz }.\n","arity":2},{"type":"def","source":"lib/Vec3.ex:17","signature":[],"object_type":"FunctionObject","name":"create","module_id":"Graphmath.Vec3","id":"create/0","doc":"`create()` is used to create a 3d vector.\n\nIt takes a list of numbers and converts it into a tuple of form {x,y,z}.\n","arity":0},{"type":"def","source":"lib/Vec3.ex:37","signature":[["vec",[],null]],"object_type":"FunctionObject","name":"create","module_id":"Graphmath.Vec3","id":"create/1","doc":"`create(vec)` creates a vec3 of value {x,y,z} out of a list of 3 or more numbers.\n\nIt will return a tuple of the form {x,y,z}.\n","arity":1},{"type":"def","source":"lib/Vec3.ex:27","signature":[["x",[],null],["y",[],null],["z",[],null]],"object_type":"FunctionObject","name":"create","module_id":"Graphmath.Vec3","id":"create/3","doc":"`create(x,y,z)` creates a vec3 of value (x,y,z).\n\nIt will return a tuple of the form {x,y,z}.\n","arity":3},{"type":"def","source":"lib/Vec3.ex:110","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"cross","module_id":"Graphmath.Vec3","id":"cross/2","doc":"`cross( a, b)` finds the cross productof a vec3 (a) with another vec3 (b).\n\nThe cross product of two vectors is a vector perpendicular to the two soure vectors.\nIts magnitude will be the area of the parallelogram made by the two souce vectors.\n\nIt returns a float of the value ( y1*z2 - z1*y2, z1*x2 - x1*z2, x1*y2 - y1*x2 ).\n","arity":2},{"type":"def","source":"lib/Vec3.ex:95","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"dot","module_id":"Graphmath.Vec3","id":"dot/2","doc":"`dot( a, b)` finds the dot (inner) product of a vec3 (a)  with another vec3 (b).\n\nIt returns a float of the value (ax*bx + ay*by + az*bz).\n","arity":2},{"type":"def","source":"lib/Vec3.ex:125","signature":[["a",[],null]],"object_type":"FunctionObject","name":"length","module_id":"Graphmath.Vec3","id":"length/1","doc":"`length(a)` finds the length (L2 norm) of a vec3 (a).\n\nThe length is the square root of the sum of the squares of the components.\n\nIt returns a float of the value ( sqrt(ax*ax + ay*ay + az*az).\n","arity":1},{"type":"def","source":"lib/Vec3.ex:151","signature":[["a",[],null]],"object_type":"FunctionObject","name":"length_manhattan","module_id":"Graphmath.Vec3","id":"length_manhattan/1","doc":"`length_manhattan(a)` finds the Manhattan (L1 norm) length of a vec3 (a).\n\nThe Manhattan length is the sum of the components.\n\nIt returns a float of the value (ax + ay + az).\n","arity":1},{"type":"def","source":"lib/Vec3.ex:138","signature":[["a",[],null]],"object_type":"FunctionObject","name":"length_squared","module_id":"Graphmath.Vec3","id":"length_squared/1","doc":"`length_squared(a)` finds the square of the length of a vec3 (a).\n\nIn many cases, this is sufficient for comparisions and avaoids a sqrt.\n\nIt returns a float of the value (ax*ax + ay*ay + az*az).\n","arity":1},{"type":"def","source":"lib/Vec3.ex:176","signature":[["a",[],null],["b",[],null],["t",[],null]],"object_type":"FunctionObject","name":"lerp","module_id":"Graphmath.Vec3","id":"lerp/3","doc":"`lerp(a,b,t)` linearly interpolates between one vec3 (a) and another vec3 (b) along an interpolant t.\n\nThe interpolant `t`  is on the domain [0,1]. Behavior outside of that is undefined.\n","arity":3},{"type":"def","source":"lib/Vec3.ex:72","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"multiply","module_id":"Graphmath.Vec3","id":"multiply/2","doc":"`multiply( a, b)` mulitplies element-wise a vec3 (a) by a vec3 (b).\n\nIt returns a tuple of the form { ax*bx, ay*by }.\n","arity":2},{"type":"def","source":"lib/Vec3.ex:186","signature":[["a",[],null],["b",[],null],["distance",[],null]],"object_type":"FunctionObject","name":"near","module_id":"Graphmath.Vec3","id":"near/3","doc":"`near(a,b, distance)` checks whether two vectors are within a length of each other.\n","arity":3},{"type":"def","source":"lib/Vec3.ex:164","signature":[["a",[],null]],"object_type":"FunctionObject","name":"normalize","module_id":"Graphmath.Vec3","id":"normalize/1","doc":"`normalize(a)` finds the unit vector with the same direction as a vec3 (a).\n\nThis is done by dividing each component by the vector's magnitude.\n\nIt returns a list of the form [ normx, normy, normz ].\n","arity":1},{"type":"def","source":"lib/Vec3.ex:203","signature":[["v",[],null],["k",[],null],["theta",[],null]],"object_type":"FunctionObject","name":"rotate","module_id":"Graphmath.Vec3","id":"rotate/3","doc":"`rotate( v, k, theta)` rotates a vector (v) about a unit vector (k) by theta radians.\n\nThis uses the [Formula of Rodriguez](http://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula):\n\nVrot = V*cos(theta) + (K x V)*sin(theta) + K(K*V)(1-cos(theta))\n","arity":3},{"type":"def","source":"lib/Vec3.ex:84","signature":[["a",[],null],["scale",[],null]],"object_type":"FunctionObject","name":"scale","module_id":"Graphmath.Vec3","id":"scale/2","doc":"`scale( a, scale)` uniformly scales a vec3 (a) by an amount (x).\n\nIt returns a tuple of the form { ax*scale, ay*scale, az*scale }.\n","arity":2},{"type":"def","source":"lib/Vec3.ex:60","signature":[["a",[],null],["b",[],null]],"object_type":"FunctionObject","name":"subtract","module_id":"Graphmath.Vec3","id":"subtract/2","doc":"`subtract(a, b)` subtracts a vec3 (b) from a vec3 (a).\n\nIt returns a tuple of the form { ax - bx, ay - by, az - bz }.\n","arity":2}],"language":"elixir","git_repo_url":"https://github.com/crertel/graphmath.git","args":[]}